rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ฟังก์ชันตรวจสอบการเข้าสู่ระบบ
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // ฟังก์ชันตรวจสอบว่าเป็นเจ้าของข้อมูลหรือไม่
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // ฟังก์ชันตรวจสอบข้อมูลที่จำเป็น
    function hasRequiredFields(data, requiredFields) {
      return requiredFields.hasAll(data.keys());
    }
    
    // ฟังก์ชันตรวจสอบรูปแบบข้อมูล
    function isValidData(data) {
      return data is map;
    }
    
    // กฎทั่วไป - ไม่อนุญาตให้เข้าถึงโดยไม่มีการ authentication
    match /{document=**} {
      allow read, write: if false;
    }
    
    // กฎสำหรับ transactions
    match /transactions/{transactionId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && isValidData(resource.data)
        && hasRequiredFields(resource.data, ['date', 'type', 'amount', 'description']);
      allow update: if isAuthenticated() 
        && isValidData(resource.data)
        && hasRequiredFields(resource.data, ['date', 'type', 'amount', 'description']);
      allow delete: if isAuthenticated();
    }
    
    // กฎสำหรับ products
    match /products/{productId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && isValidData(resource.data)
        && hasRequiredFields(resource.data, ['name', 'price', 'quantity']);
      allow update: if isAuthenticated() 
        && isValidData(resource.data)
        && hasRequiredFields(resource.data, ['name', 'price', 'quantity']);
      allow delete: if isAuthenticated();
    }
    
    // กฎสำหรับ suppliers
    match /suppliers/{supplierId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && isValidData(resource.data)
        && hasRequiredFields(resource.data, ['name', 'contact']);
      allow update: if isAuthenticated() 
        && isValidData(resource.data)
        && hasRequiredFields(resource.data, ['name', 'contact']);
      allow delete: if isAuthenticated();
    }
    
    // กฎสำหรับ users - เฉพาะเจ้าของข้อมูลเท่านั้น
    match /users/{userId} {
      allow read, write: if isAuthenticated() && isOwner(userId);
    }
    
    // กฎสำหรับ security logs - เฉพาะการอ่านเท่านั้น
    match /security_logs/{logId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() 
        && isValidData(resource.data)
        && hasRequiredFields(resource.data, ['timestamp', 'event', 'details']);
    }
  }
}
